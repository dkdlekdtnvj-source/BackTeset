version: 1

search:
  algo: bayes
  n_trials: 150
  seed: 42
  top_k: 5
  # 기본 병렬: run.py에서 자동 설정(n_jobs=자동)

objective:
  # === 기본룰: ProfitFactor 중심 ===
  - name: ProfitFactor
    weight: 1.0

constraints:
  min_trades_test: 12   # 테스트 구간에서 최소 거래 수 (없으면 강한 패널티)
  max_dd_pct: 70        # MaxDD 70% 초과면 패널티

space:
  # --- UT Bot ---
  utKey:        { type: float, min: 2.0, max: 6.0,  step: 0.2 }
  utAtrLen:     { type: int,   min: 5,   max: 20,  step: 1 }
  useHeikin:    { type: bool }

  # --- StochRSI ---
  rsiLen:       { type: int,   min: 8,   max: 28,  step: 2 }
  stochLen:     { type: int,   min: 8,   max: 28,  step: 2 }
  kLen:         { type: int,   min: 1,   max: 6,   step: 1 }
  dLen:         { type: int,   min: 1,   max: 6,   step: 1 }
  obLevel:      { type: float, min: 70,  max: 90,  step: 1 }
  osLevel:      { type: float, min: 10,  max: 30,  step: 1 }
  stMode:       { type: str,   choices: ["Bounce", "Cross"] }

  # --- Exits ---
  atrLen:         { type: int,   min: 10,  max: 40,  step: 2 }
  initStopMult:   { type: float, min: 1.0, max: 3.0, step: 0.1 }
  trailAtrMult:   { type: float, min: 1.5, max: 4.0, step: 0.1 }
  trailStartPct:  { type: float, min: 0.5, max: 3.0, step: 0.1 }
  trailGapPct:    { type: float, min: 0.2, max: 1.0, step: 0.05 }
  usePercentStop: { type: bool }
  stopPct:        { type: float, min: 0.5, max: 3.0, step: 0.1 }
  takePct:        { type: float, min: 1.0, max: 5.0, step: 0.1 }
  breakevenPct:   { type: float, min: 0.0, max: 1.0, step: 0.05 }
  maxHoldBars:    { type: int,   min: 0,   max: 480, step: 20 }
  useFlipExit:    { type: bool }
  cooldownBars:   { type: int,   min: 0,   max: 30,  step: 1 }

risk:
  leverage: 10
  fee_pct: 0.0006
  slippage_ticks: 3

# --- LLM assistant configuration ---
# To enable Gemini‑assisted parameter proposals, set `enabled: true` and provide
# a valid API key via `api_key` or `api_key_env`. The default model points to
# the latest Gemini 2.5 Flash preview; override it if Google renames the model
# after the preview phase. `initial_trials` controls how many Optuna trials are
# executed before consulting the LLM. `top_n` determines how many top trials
# are summarised, and `count` sets the number of candidate suggestions to
# enqueue. `thinking_budget` is optional and applies only to Gemini 2.5 models,
# tuning the internal reasoning cost (0 disables thinking; higher values allow
# deeper reasoning but increase latency/cost).
llm:
  enabled: false
  api_key_env: GEMINI_API_KEY
  model: gemini-2.5-flash-preview-04-17
  top_n: 10
  count: 8
  initial_trials: 20
  thinking_budget: 1024
